import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

public class InsertDogFrame extends javax.swing.JDialog {

    private Connection conn;
    private PreparedStatement insertNewDog;
    
    public InsertDogFrame() {
        this.setModalityType(ModalityType.APPLICATION_MODAL);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        dogNameTextField = new javax.swing.JTextField();
        dogAgeTextField = new javax.swing.JTextField();
        dogBreedTextField = new javax.swing.JTextField();
        dogWeightTextField = new javax.swing.JTextField();
        dogHeightTextField = new javax.swing.JTextField();
        dogFoodTextField = new javax.swing.JTextField();
        dogCareTextField = new javax.swing.JTextField();
        dogProductTextField = new javax.swing.JTextField();
        btnAddDog = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 255));
        jLabel1.setText("Dog Name:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 255));
        jLabel2.setText("Dog Age:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 255));
        jLabel3.setText("Dog Breed:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 255));
        jLabel4.setText("Dog Weight:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 255));
        jLabel5.setText("Dog Height:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 51, 255));
        jLabel6.setText("Dog Food:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 51, 255));
        jLabel7.setText("Dog Care:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 51, 255));
        jLabel8.setText("Dog Product:");

        dogNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dogNameTextFieldActionPerformed(evt);
            }
        });

        dogWeightTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dogWeightTextFieldActionPerformed(evt);
            }
        });

        dogHeightTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dogHeightTextFieldActionPerformed(evt);
            }
        });

        dogFoodTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dogFoodTextFieldActionPerformed(evt);
            }
        });

        dogCareTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dogCareTextFieldActionPerformed(evt);
            }
        });

        dogProductTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dogProductTextFieldActionPerformed(evt);
            }
        });

        btnAddDog.setBackground(new java.awt.Color(51, 51, 255));
        btnAddDog.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnAddDog.setText("ADD DOG");
        btnAddDog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddDogActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 51, 255));
        jLabel9.setText("INSERT A DOG");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5))
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dogCareTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(dogFoodTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(dogHeightTextField)
                                    .addComponent(dogProductTextField)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(dogAgeTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE)
                                    .addComponent(dogBreedTextField)
                                    .addComponent(dogWeightTextField)
                                    .addComponent(dogNameTextField, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAddDog)
                        .addGap(206, 206, 206))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(116, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(111, 111, 111))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(dogNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(dogAgeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(dogBreedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(dogWeightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(dogHeightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(dogFoodTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(dogCareTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dogProductTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAddDog)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dogWeightTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dogWeightTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dogWeightTextFieldActionPerformed

    private void dogHeightTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dogHeightTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dogHeightTextFieldActionPerformed

    private void dogFoodTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dogFoodTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dogFoodTextFieldActionPerformed

    private void dogCareTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dogCareTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dogCareTextFieldActionPerformed

    private void dogProductTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dogProductTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dogProductTextFieldActionPerformed

    private void dogNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dogNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dogNameTextFieldActionPerformed

    private void btnAddDogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddDogActionPerformed
        // TODO add your handling code here:
        if( dogNameTextField.getText().isEmpty() || dogAgeTextField.getText().isEmpty() || 
            dogBreedTextField.getText().isEmpty() || dogWeightTextField.getText().isEmpty() ||
            dogHeightTextField.getText().isEmpty() || dogFoodTextField.getText().isEmpty() || 
            dogCareTextField.getText().isEmpty() || dogProductTextField.getText().isEmpty() ) {
            
            JOptionPane.showMessageDialog(this, "One or more text field is empty");
        } else {
            conn = DogQueries.getConnection();
            if(conn != null) {
                try {
                    insertNewDog = conn.prepareStatement("INSERT INTO dogTable " +
                            "(dname, dage, dbreed, dweight, dheight, dfood, dcare, dproduct)" +
                            "VALUES(?, ?, ?, ?, ?, ?, ?, ?)");
                    insertNewDog.setString(1, dogNameTextField.getText());
                    insertNewDog.setInt( 2, Integer.parseInt(dogAgeTextField.getText()) );
                    insertNewDog.setString( 3, dogBreedTextField.getText());
                    insertNewDog.setDouble( 4, Double.parseDouble( dogWeightTextField.getText()) );
                    insertNewDog.setDouble( 5, Double.parseDouble( dogHeightTextField.getText()) );
                    insertNewDog.setString( 6, dogFoodTextField.getText() );
                    insertNewDog.setString( 7, dogCareTextField.getText() );
                    insertNewDog.setString( 8, dogProductTextField.getText() );
                    
                    int row = insertNewDog.executeUpdate();
                    clearFields();
                    JOptionPane.showMessageDialog(this, "Dog info added to row " + row);
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(this, "INSERTION FAILED: " + e.getMessage());
                } finally {
                    try {
                        conn.close();
                    } catch (SQLException ex) {
                        System.out.println( ex.getLocalizedMessage() );
                    }
                }
            }    
        }
    }//GEN-LAST:event_btnAddDogActionPerformed

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(InsertDogFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(InsertDogFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(InsertDogFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(InsertDogFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new InsertDogFrame().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddDog;
    private javax.swing.JTextField dogAgeTextField;
    private javax.swing.JTextField dogBreedTextField;
    private javax.swing.JTextField dogCareTextField;
    private javax.swing.JTextField dogFoodTextField;
    private javax.swing.JTextField dogHeightTextField;
    private javax.swing.JTextField dogNameTextField;
    private javax.swing.JTextField dogProductTextField;
    private javax.swing.JTextField dogWeightTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables

    private void clearFields() {
        dogNameTextField.setText("");
        dogAgeTextField.setText("");
        dogBreedTextField.setText("");
        dogWeightTextField.setText("");
        dogHeightTextField.setText("");
        dogFoodTextField.setText("");
        dogCareTextField.setText("");
        dogProductTextField.setText("");
    }
}
